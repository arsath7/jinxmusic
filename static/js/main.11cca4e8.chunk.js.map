{"version":3,"sources":["Components/Header.js","songContext.js","Components/Search_bar.js","Components/song.js","dashb.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Songcontext","createContext","Songprovider","props","useState","search","setsearch","id","name","singers","genre","album","song","image","songs","setsongs","Provider","value","songss","searchh","children","SearchBar","useContext","type","onChange","e","target","placeholder","onClick","Song","currentSong","setCurrentSong","filter","includes","map","src","preventDefault","getsong","autoPlay","showJumpControls","customAdditionalControls","showSkipControls","showFilledVolume","onEnded","i","Dashb","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11cca4e8.chunk.js","sourcesContent":["// Header component\r\nconst Header = () => {\r\n    return (\r\n      <div className=\"titleone\">\r\n        <h1 className='title'>JINX MUSIC</h1>\r\n      </div>\r\n    );\r\n  };\r\n  export default Header;\r\n  ","//state management\r\nimport {useState, createContext} from 'react';\r\n\r\nexport const Songcontext = createContext();\r\n\r\nexport const Songprovider = props =>{\r\n\r\n    const [search, setsearch] = useState(\"\");\r\n    \r\n    const[songs, setsongs] = useState([\r\n        {\r\n            id: 1,\r\n            name: 'raanjhanaa',\r\n            singers: 'Ar rahman',\r\n            genre: 'folk song',\r\n            album: 'Raanjhanaa',\r\n            song: \"songs/Raanjhanaa.mp3\",\r\n            image: \"images/raanjha.jpg\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'hasi',\r\n            singers: 'ami mishra',\r\n            genre: 'melody',\r\n            album: 'Hamaari hadhuri kahani',\r\n            song: \"songs/Hasi.mp3\",\r\n            image: \"images/hamari.jpg\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'ik vaari aa',\r\n            singers: 'arijit singh',\r\n            genre: 'pop',\r\n            album: 'Raabta',\r\n            song: \"songs/Ik Vaari Aa.mp3\",\r\n            image: \"images/raabta.jpg\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'kaise mujhe',\r\n            singers: 'ami mishra',\r\n            genre: 'melody',\r\n            album: 'ghajini',\r\n            song: \"songs/Kaise Mujhe.mp3\",\r\n            image: \"images/ghajini.jpg\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'kar-har-maidaan',\r\n            singers: 'lal singh',\r\n            genre: 'motivation',\r\n            album: 'sanju',\r\n            song: \"songs/Kar-Har-Maidaan-Fateh.mp3\",\r\n            image: \"images/sanju.jpg\"\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'the humma song',\r\n            singers: 'ar rahman',\r\n            genre: 'melody',\r\n            album: 'ok jaanu',\r\n            song: \"songs/The Humma Song.mp3\",\r\n            image: \"images/ok jaanu.jpg\"\r\n        },\r\n        {\r\n            id: 7,\r\n            name: 'tum tak',\r\n            singers: 'Javed ali',\r\n            genre: 'melody',\r\n            album: 'Raanjhanaa',\r\n            song: \"songs/Tum Tak.mp3\",\r\n            image: \"images/raanjha.jpg\"\r\n        },\r\n        {\r\n            id: 8,\r\n            name: 'ullu ka pattha',\r\n            singers: 'Arijit singh',\r\n            genre: 'pop',\r\n            album: 'Jagga jasoos',\r\n            song: \"songs/Ullu Ka Pattha.mp3\",\r\n            image: \"images/jagga.jpg\"\r\n        },\r\n        {\r\n            id: 9,\r\n            name: 'yun hi chala chal',\r\n            singers: 'Udit narayanan',\r\n            genre: 'motivation',\r\n            album: 'Swades',\r\n            song: \"songs/Yun Hi Chala Chal.mp3\",\r\n            image: \"images/swades.jpg\"\r\n        }\r\n\r\n    ]);\r\n\r\n   return(\r\n       <Songcontext.Provider value={{songss:[songs, setsongs],searchh:[search, setsearch]}}>\r\n           {props.children}\r\n       </Songcontext.Provider>\r\n   );\r\n}","import { useContext} from 'react';\r\nimport {Songcontext} from '../songContext';\r\nimport { FaRegTimesCircle } from 'react-icons/fa';\r\n\r\n\r\nconst SearchBar = () =>{\r\n\r\n    const { searchh,songss } = useContext(Songcontext);\r\n    const[search, setsearch] = searchh;\r\n\r\n    const updateSearch = e =>{\r\n        setsearch(e.target.value);\r\n    }\r\n\r\n    const clearSearchText = e =>{\r\n         setsearch(\"\");\r\n    }\r\n\r\n    return(\r\n        <div className='searchform'>\r\n        <div className=\"search-bar\">\r\n            <input type=\"text\"\r\n            className=\"search-box\"\r\n            value={search}\r\n            onChange={updateSearch}\r\n            placeholder=\"Search by song name\"\r\n            />\r\n            <FaRegTimesCircle onClick={clearSearchText} className='closeicon' />\r\n        </div>\r\n            \r\n        </div>\r\n        \r\n      );\r\n}\r\n\r\nexport default SearchBar;","import {useState} from 'react';\r\nimport AudioPlayer from 'react-h5-audio-player';\r\nimport 'react-h5-audio-player/lib/styles.css';\r\nimport { useContext } from 'react';\r\nimport {Songcontext} from '../songContext';\r\nimport { FaPlay } from 'react-icons/fa';\r\nconst Song = () => {\r\n   \r\n    const { songss,searchh} = useContext(Songcontext);\r\n    const[songs, setsongs] = songss;\r\n    const[filtersongs, setfiltersongs] = songss;\r\n    const[search, setsearch] = searchh;\r\n    const [currentSong, setCurrentSong] = useState(0);\r\n    let istruesearchresults;\r\n    \r\n    const song = songs[currentSong];\r\n\r\n    if(!song) return null; // don't render the player when no song is available\r\n\r\n    const getsong = (e, id) =>{\r\n        e.preventDefault();\r\n        setCurrentSong(id-1);\r\n    }\r\n\r\n    if(search != \"\"){\r\n      istruesearchresults = true;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n          <div className='songname'>\r\n           {songs.filter(song =>song.name.includes(search)).map(song =>(\r\n           <div className='songlist'>\r\n             <div className='hiddentitle'>hello</div>\r\n             <img  className='picture' src={song.image} />\r\n           <h1 className='indisong'>{song.name}</h1>\r\n           <div className='details'>\r\n             <p><b>Album:</b> <i>{song.album}</i></p>\r\n             <p><b>Singers:</b> <i>{song.singers}</i></p>\r\n           </div>\r\n           <FaPlay className='playicon' onClick={(e) => getsong(e, song.id)} />\r\n           <div className='hiddentitle'>hello</div>\r\n           </div>\r\n           \r\n           ))}\r\n          </div>\r\n    <div className=\"player\">\r\n        <AudioPlayer\r\n          autoPlay\r\n          src={song.song}\r\n          showJumpControls={false}\r\n          customAdditionalControls={[]}\r\n          showSkipControls\r\n          showFilledVolume\r\n          onEnded={() => setCurrentSong(i => i + 1)}\r\n        />\r\n      </div>\r\n      </div> \r\n    );\r\n  };\r\nexport default Song;","import \"./App.css\";\r\nimport Header from './Components/Header';\r\nimport SearchBar from \"./Components/Search_bar\";\r\nimport {Songprovider} from './songContext';\r\nimport Song from './Components/song';\r\n\r\nfunction Dashb() {\r\n\r\n\r\n    return(\r\n      <Songprovider>\r\n        <div className =\"app\">\r\n          <div className='titlecompo'>\r\n          <Header />\r\n          </div>\r\n          <div className='searchbarcompo'>\r\n          <SearchBar />\r\n          </div>\r\n          <Song />\r\n        </div>\r\n        </Songprovider>\r\n        );\r\n    }\r\n    export default Dashb;","import \"./App.css\";\nimport Dashb from './dashb';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { useState } from 'react'; \nimport Login from './login';\n\nfunction App() {\n\n  const [token, setToken] = useState();\n\n  //if(!token) {\n   // return(<div className='ip'> <Login setToken={setToken} /> </div>);\n  //}\n\n  return (\n\n    <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\">\n        <Dashb />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,document.getElementById('root'));\n    \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}